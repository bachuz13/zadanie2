name: Build and Push Docker Image

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write

    env:
      IMAGE_NAME: ghcr.io/${{ secrets.GHCR_USERNAME }}/zadanie1-app

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build image (cached) without pushing
        uses: docker/build-push-action@v5
        with:
          context: ./app
          push: false
          platforms: linux/amd64,linux/arm64
          tags: ${{ env.IMAGE_NAME }}:latest
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/zadanie1-cache:latest
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/zadanie1-cache:latest,mode=max
          outputs: type=docker

      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.IMAGE_NAME }}:latest
          format: table
          exit-code: 1
          severity: CRITICAL,HIGH
          ignore-unfixed: true

      - name: Push image if scan is clean
        if: success()
        uses: docker/build-push-action@v5
        with:
          context: ./app
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ env.IMAGE_NAME }}:latest
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/zadanie1-cache:latest
